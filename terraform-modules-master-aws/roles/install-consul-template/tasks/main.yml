---
- name: Set OS family flag
  set_fact:
    is_debian: ansible_os_family == "Debian"
    is_redhat: ansible_os_family == "RedHat"
- name: And check OS family flag
  assert:
    that: is_debian or is_redhat
    msg: "Only Debian and Redhat OS families are supported"

- name: Check systemd is installed
  apt:
    name: systemd
    state: present
  become: yes
  when: is_debian

- name: Check Consul is installed
  shell: "consul version"
- name: Check Consul Template user exists
  user:
    name: "{{ consul_template_user }}"
    state: present
  become: yes
  when: consul_template_user != "root"
- name: Create install directories
  file:
    path: "{{ item }}"
    group: "{{ consul_template_user }}"
    owner: "{{ consul_template_user }}"
    state: directory
  with_items:
    - "{{ base_path }}"
    - "{{ base_path }}/bin"
    - "{{ base_path }}/config"
    - "{{ base_path }}/log"
    - "{{ base_path }}/template"
  become: yes
- name: Download Consul Template Binary
  get_url:
    force: yes
    dest: /tmp/consul-template.zip
    url: "https://releases.hashicorp.com/consul-template/{{ consul_template_version }}/consul-template_{{ consul_template_version }}_linux_amd64.zip"
- name: Unzip to destination
  unarchive:
    src: /tmp/consul-template.zip
    remote_src: yes
    dest: "{{ base_path }}/bin"
    group: "{{ consul_template_user }}"
    owner: "{{ consul_template_user }}"
    mode: 0755
  become: yes
- name: Delete downloaded archive
  file:
    path: /tmp/consul-template.zip
    state: absent
- name: Symlink to /usr/local/bin/consul-template
  file:
    src: "{{ base_path }}/bin/consul-template"
    dest: /usr/local/bin/consul-template
    state: link
  become: yes
- name: Install run-consul-template
  copy:
    src: "{{ role_path }}/files/run-consul-template.sh"
    dest: "{{ base_path }}/bin/run-consul-template"
    group: "{{ consul_template_user }}"
    owner: "{{ consul_template_user }}"
    mode: 0755
  become: yes

# Allows Consul template to send signals to tasks or restart tasks
- name: "Allow {{ consul_template_user }} to use sudo with systemctl"
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^{{ consul_template_user }}'
    line: '{{ consul_template_user }} ALL=(ALL) NOPASSWD: {{ systemctl }}'
    validate: 'visudo -cf %s'
  become: yes
  when: is_debian and consul_template_user != "root"
- name: "Allow {{ consul_template_user }} to use sudo with initctl"
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^{{ consul_template_user }}'
    line: '{{ consul_template_user }} ALL=(ALL) NOPASSWD: {{ initctl }}'
    validate: 'visudo -cf %s'
  become: yes
  when: is_redhat and consul_template_user != "root"
